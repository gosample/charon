// Code generated by protoc-gen-go.
// source: refresh_token.proto
// DO NOT EDIT!

package charonrpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf2 "github.com/golang/protobuf/ptypes/timestamp"
import qtypes "github.com/piotrkowalczuk/qtypes"
import ntypes "github.com/piotrkowalczuk/ntypes"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RefreshToken struct {
	Token      string                      `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Notes      *ntypes.String              `protobuf:"bytes,2,opt,name=notes" json:"notes,omitempty"`
	UserId     int64                       `protobuf:"varint,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Disabled   bool                        `protobuf:"varint,4,opt,name=disabled" json:"disabled,omitempty"`
	ExpireAt   *google_protobuf2.Timestamp `protobuf:"bytes,5,opt,name=expire_at,json=expireAt" json:"expire_at,omitempty"`
	LastUsedAt *google_protobuf2.Timestamp `protobuf:"bytes,6,opt,name=last_used_at,json=lastUsedAt" json:"last_used_at,omitempty"`
	CreatedAt  *google_protobuf2.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	CreatedBy  *ntypes.Int64               `protobuf:"bytes,8,opt,name=created_by,json=createdBy" json:"created_by,omitempty"`
	UpdatedAt  *google_protobuf2.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	UpdatedBy  *ntypes.Int64               `protobuf:"bytes,10,opt,name=updated_by,json=updatedBy" json:"updated_by,omitempty"`
}

func (m *RefreshToken) Reset()                    { *m = RefreshToken{} }
func (m *RefreshToken) String() string            { return proto.CompactTextString(m) }
func (*RefreshToken) ProtoMessage()               {}
func (*RefreshToken) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *RefreshToken) GetNotes() *ntypes.String {
	if m != nil {
		return m.Notes
	}
	return nil
}

func (m *RefreshToken) GetExpireAt() *google_protobuf2.Timestamp {
	if m != nil {
		return m.ExpireAt
	}
	return nil
}

func (m *RefreshToken) GetLastUsedAt() *google_protobuf2.Timestamp {
	if m != nil {
		return m.LastUsedAt
	}
	return nil
}

func (m *RefreshToken) GetCreatedAt() *google_protobuf2.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *RefreshToken) GetCreatedBy() *ntypes.Int64 {
	if m != nil {
		return m.CreatedBy
	}
	return nil
}

func (m *RefreshToken) GetUpdatedAt() *google_protobuf2.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *RefreshToken) GetUpdatedBy() *ntypes.Int64 {
	if m != nil {
		return m.UpdatedBy
	}
	return nil
}

type CreateRefreshTokenRequest struct {
	Notes    *ntypes.String              `protobuf:"bytes,1,opt,name=notes" json:"notes,omitempty"`
	ExpireAt *google_protobuf2.Timestamp `protobuf:"bytes,2,opt,name=expire_at,json=expireAt" json:"expire_at,omitempty"`
}

func (m *CreateRefreshTokenRequest) Reset()                    { *m = CreateRefreshTokenRequest{} }
func (m *CreateRefreshTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRefreshTokenRequest) ProtoMessage()               {}
func (*CreateRefreshTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *CreateRefreshTokenRequest) GetNotes() *ntypes.String {
	if m != nil {
		return m.Notes
	}
	return nil
}

func (m *CreateRefreshTokenRequest) GetExpireAt() *google_protobuf2.Timestamp {
	if m != nil {
		return m.ExpireAt
	}
	return nil
}

type CreateRefreshTokenResponse struct {
	RefreshToken *RefreshToken `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken" json:"refresh_token,omitempty"`
}

func (m *CreateRefreshTokenResponse) Reset()                    { *m = CreateRefreshTokenResponse{} }
func (m *CreateRefreshTokenResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateRefreshTokenResponse) ProtoMessage()               {}
func (*CreateRefreshTokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

func (m *CreateRefreshTokenResponse) GetRefreshToken() *RefreshToken {
	if m != nil {
		return m.RefreshToken
	}
	return nil
}

type ListRefreshTokensRequest struct {
	UserId     *qtypes.Int64     `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Notes      *qtypes.String    `protobuf:"bytes,2,opt,name=notes" json:"notes,omitempty"`
	Disabled   *ntypes.Bool      `protobuf:"bytes,3,opt,name=disabled" json:"disabled,omitempty"`
	ExpireAt   *qtypes.Timestamp `protobuf:"bytes,4,opt,name=expire_at,json=expireAt" json:"expire_at,omitempty"`
	LastUsedAt *qtypes.Timestamp `protobuf:"bytes,5,opt,name=last_used_at,json=lastUsedAt" json:"last_used_at,omitempty"`
	CreatedAt  *qtypes.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt  *qtypes.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	Offset     *ntypes.Int64     `protobuf:"bytes,100,opt,name=offset" json:"offset,omitempty"`
	Limit      *ntypes.Int64     `protobuf:"bytes,101,opt,name=limit" json:"limit,omitempty"`
	Sort       map[string]bool   `protobuf:"bytes,102,rep,name=sort" json:"sort,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *ListRefreshTokensRequest) Reset()                    { *m = ListRefreshTokensRequest{} }
func (m *ListRefreshTokensRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRefreshTokensRequest) ProtoMessage()               {}
func (*ListRefreshTokensRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{3} }

func (m *ListRefreshTokensRequest) GetUserId() *qtypes.Int64 {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *ListRefreshTokensRequest) GetNotes() *qtypes.String {
	if m != nil {
		return m.Notes
	}
	return nil
}

func (m *ListRefreshTokensRequest) GetDisabled() *ntypes.Bool {
	if m != nil {
		return m.Disabled
	}
	return nil
}

func (m *ListRefreshTokensRequest) GetExpireAt() *qtypes.Timestamp {
	if m != nil {
		return m.ExpireAt
	}
	return nil
}

func (m *ListRefreshTokensRequest) GetLastUsedAt() *qtypes.Timestamp {
	if m != nil {
		return m.LastUsedAt
	}
	return nil
}

func (m *ListRefreshTokensRequest) GetCreatedAt() *qtypes.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *ListRefreshTokensRequest) GetUpdatedAt() *qtypes.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *ListRefreshTokensRequest) GetOffset() *ntypes.Int64 {
	if m != nil {
		return m.Offset
	}
	return nil
}

func (m *ListRefreshTokensRequest) GetLimit() *ntypes.Int64 {
	if m != nil {
		return m.Limit
	}
	return nil
}

func (m *ListRefreshTokensRequest) GetSort() map[string]bool {
	if m != nil {
		return m.Sort
	}
	return nil
}

type ListRefreshTokensResponse struct {
	RefreshTokens []*RefreshToken `protobuf:"bytes,1,rep,name=refresh_tokens,json=refreshTokens" json:"refresh_tokens,omitempty"`
}

func (m *ListRefreshTokensResponse) Reset()                    { *m = ListRefreshTokensResponse{} }
func (m *ListRefreshTokensResponse) String() string            { return proto.CompactTextString(m) }
func (*ListRefreshTokensResponse) ProtoMessage()               {}
func (*ListRefreshTokensResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{4} }

func (m *ListRefreshTokensResponse) GetRefreshTokens() []*RefreshToken {
	if m != nil {
		return m.RefreshTokens
	}
	return nil
}

type DisableRefreshTokenRequest struct {
	Token  string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	UserId int64  `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *DisableRefreshTokenRequest) Reset()                    { *m = DisableRefreshTokenRequest{} }
func (m *DisableRefreshTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*DisableRefreshTokenRequest) ProtoMessage()               {}
func (*DisableRefreshTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{5} }

type DisableRefreshTokenResponse struct {
	RefreshToken *RefreshToken `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken" json:"refresh_token,omitempty"`
}

func (m *DisableRefreshTokenResponse) Reset()                    { *m = DisableRefreshTokenResponse{} }
func (m *DisableRefreshTokenResponse) String() string            { return proto.CompactTextString(m) }
func (*DisableRefreshTokenResponse) ProtoMessage()               {}
func (*DisableRefreshTokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{6} }

func (m *DisableRefreshTokenResponse) GetRefreshToken() *RefreshToken {
	if m != nil {
		return m.RefreshToken
	}
	return nil
}

func init() {
	proto.RegisterType((*RefreshToken)(nil), "charonrpc.RefreshToken")
	proto.RegisterType((*CreateRefreshTokenRequest)(nil), "charonrpc.CreateRefreshTokenRequest")
	proto.RegisterType((*CreateRefreshTokenResponse)(nil), "charonrpc.CreateRefreshTokenResponse")
	proto.RegisterType((*ListRefreshTokensRequest)(nil), "charonrpc.ListRefreshTokensRequest")
	proto.RegisterType((*ListRefreshTokensResponse)(nil), "charonrpc.ListRefreshTokensResponse")
	proto.RegisterType((*DisableRefreshTokenRequest)(nil), "charonrpc.DisableRefreshTokenRequest")
	proto.RegisterType((*DisableRefreshTokenResponse)(nil), "charonrpc.DisableRefreshTokenResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for RefreshTokenManager service

type RefreshTokenManagerClient interface {
	Create(ctx context.Context, in *CreateRefreshTokenRequest, opts ...grpc.CallOption) (*CreateRefreshTokenResponse, error)
	Disable(ctx context.Context, in *DisableRefreshTokenRequest, opts ...grpc.CallOption) (*DisableRefreshTokenResponse, error)
	List(ctx context.Context, in *ListRefreshTokensRequest, opts ...grpc.CallOption) (*ListRefreshTokensResponse, error)
}

type refreshTokenManagerClient struct {
	cc *grpc.ClientConn
}

func NewRefreshTokenManagerClient(cc *grpc.ClientConn) RefreshTokenManagerClient {
	return &refreshTokenManagerClient{cc}
}

func (c *refreshTokenManagerClient) Create(ctx context.Context, in *CreateRefreshTokenRequest, opts ...grpc.CallOption) (*CreateRefreshTokenResponse, error) {
	out := new(CreateRefreshTokenResponse)
	err := grpc.Invoke(ctx, "/charonrpc.RefreshTokenManager/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *refreshTokenManagerClient) Disable(ctx context.Context, in *DisableRefreshTokenRequest, opts ...grpc.CallOption) (*DisableRefreshTokenResponse, error) {
	out := new(DisableRefreshTokenResponse)
	err := grpc.Invoke(ctx, "/charonrpc.RefreshTokenManager/Disable", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *refreshTokenManagerClient) List(ctx context.Context, in *ListRefreshTokensRequest, opts ...grpc.CallOption) (*ListRefreshTokensResponse, error) {
	out := new(ListRefreshTokensResponse)
	err := grpc.Invoke(ctx, "/charonrpc.RefreshTokenManager/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RefreshTokenManager service

type RefreshTokenManagerServer interface {
	Create(context.Context, *CreateRefreshTokenRequest) (*CreateRefreshTokenResponse, error)
	Disable(context.Context, *DisableRefreshTokenRequest) (*DisableRefreshTokenResponse, error)
	List(context.Context, *ListRefreshTokensRequest) (*ListRefreshTokensResponse, error)
}

func RegisterRefreshTokenManagerServer(s *grpc.Server, srv RefreshTokenManagerServer) {
	s.RegisterService(&_RefreshTokenManager_serviceDesc, srv)
}

func _RefreshTokenManager_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRefreshTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RefreshTokenManagerServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/charonrpc.RefreshTokenManager/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RefreshTokenManagerServer).Create(ctx, req.(*CreateRefreshTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RefreshTokenManager_Disable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisableRefreshTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RefreshTokenManagerServer).Disable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/charonrpc.RefreshTokenManager/Disable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RefreshTokenManagerServer).Disable(ctx, req.(*DisableRefreshTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RefreshTokenManager_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRefreshTokensRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RefreshTokenManagerServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/charonrpc.RefreshTokenManager/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RefreshTokenManagerServer).List(ctx, req.(*ListRefreshTokensRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RefreshTokenManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "charonrpc.RefreshTokenManager",
	HandlerType: (*RefreshTokenManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _RefreshTokenManager_Create_Handler,
		},
		{
			MethodName: "Disable",
			Handler:    _RefreshTokenManager_Disable_Handler,
		},
		{
			MethodName: "List",
			Handler:    _RefreshTokenManager_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "refresh_token.proto",
}

func init() { proto.RegisterFile("refresh_token.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 697 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x54, 0x4b, 0x4f, 0xdb, 0x4c,
	0x14, 0xfd, 0x1c, 0xe7, 0xe1, 0x5c, 0x02, 0xe2, 0x1b, 0x2a, 0x61, 0xdc, 0x4d, 0x64, 0x1e, 0xca,
	0xa2, 0x38, 0x08, 0xaa, 0xd2, 0x07, 0xaa, 0x14, 0xda, 0x2e, 0xe8, 0x63, 0x63, 0xa8, 0x2a, 0xc1,
	0x22, 0x72, 0xe2, 0x89, 0xb1, 0xe2, 0x78, 0x9c, 0x99, 0x71, 0x5b, 0xf3, 0x67, 0xba, 0xee, 0x3f,
	0xe9, 0xcf, 0xaa, 0xec, 0xb1, 0x93, 0x49, 0xeb, 0x10, 0x16, 0x5d, 0xc5, 0x37, 0x73, 0xce, 0xbd,
	0x33, 0xf7, 0x9c, 0x7b, 0x61, 0x8b, 0xe2, 0x11, 0xc5, 0xec, 0xb6, 0xcf, 0xc9, 0x18, 0x87, 0x56,
	0x44, 0x09, 0x27, 0xa8, 0x39, 0xbc, 0x75, 0x28, 0x09, 0x69, 0x34, 0x34, 0x5e, 0x79, 0x3e, 0xbf,
	0x8d, 0x07, 0xd6, 0x90, 0x4c, 0xba, 0x1e, 0x09, 0x9c, 0xd0, 0xeb, 0x66, 0x98, 0x41, 0x3c, 0xea,
	0x46, 0x3c, 0x89, 0x30, 0xeb, 0x72, 0x7f, 0x82, 0x19, 0x77, 0x26, 0xd1, 0xfc, 0x4b, 0xe4, 0x31,
	0x0e, 0x25, 0x72, 0xe4, 0x13, 0x4e, 0xc7, 0xe4, 0x9b, 0x13, 0x0c, 0xef, 0xe2, 0x71, 0x77, 0x2a,
	0xb8, 0xe2, 0x67, 0x35, 0x3c, 0x14, 0xf0, 0x50, 0x82, 0x9b, 0xbf, 0x54, 0x68, 0xd9, 0xe2, 0xf6,
	0x57, 0xe9, 0xe5, 0xd1, 0x23, 0xa8, 0x65, 0xaf, 0xd0, 0x95, 0xb6, 0xd2, 0x69, 0xda, 0x22, 0x40,
	0x7b, 0x50, 0x0b, 0x09, 0xc7, 0x4c, 0xaf, 0xb4, 0x95, 0xce, 0xda, 0xf1, 0x86, 0x95, 0x27, 0xb9,
	0xe4, 0xd4, 0x0f, 0x3d, 0x5b, 0x1c, 0xa2, 0x6d, 0x68, 0xc4, 0x0c, 0xd3, 0xbe, 0xef, 0xea, 0x6a,
	0x5b, 0xe9, 0xa8, 0x76, 0x3d, 0x0d, 0x2f, 0x5c, 0x64, 0x80, 0xe6, 0xfa, 0xcc, 0x19, 0x04, 0xd8,
	0xd5, 0xab, 0x6d, 0xa5, 0xa3, 0xd9, 0xb3, 0x18, 0x9d, 0x42, 0x13, 0x7f, 0x8f, 0x7c, 0x8a, 0xfb,
	0x0e, 0xd7, 0x6b, 0x59, 0x7a, 0xc3, 0xf2, 0x08, 0xf1, 0x02, 0x6c, 0x15, 0x5d, 0xb2, 0xae, 0x8a,
	0xa6, 0xd8, 0x9a, 0x00, 0xf7, 0x38, 0x3a, 0x83, 0x56, 0xe0, 0x30, 0xde, 0x8f, 0x19, 0x76, 0x53,
	0x6e, 0x7d, 0x25, 0x17, 0x52, 0xfc, 0x67, 0x86, 0xdd, 0x1e, 0x47, 0x2f, 0x00, 0x86, 0x14, 0x3b,
	0x5c, 0x70, 0x1b, 0x2b, 0xb9, 0xcd, 0x1c, 0xdd, 0xe3, 0xe8, 0xc9, 0x9c, 0x3a, 0x48, 0x74, 0x2d,
	0xa3, 0xae, 0x17, 0x1d, 0xb9, 0x08, 0xf9, 0xb3, 0xa7, 0x33, 0xf4, 0x79, 0x92, 0x16, 0x8a, 0x23,
	0xb7, 0x28, 0xd4, 0x5c, 0x5d, 0x28, 0x47, 0x8b, 0x42, 0x05, 0x75, 0x90, 0xe8, 0x50, 0x5a, 0x28,
	0x07, 0x9c, 0x27, 0xe6, 0x1d, 0xec, 0xbc, 0xc9, 0xaa, 0xca, 0x7a, 0xda, 0x78, 0x1a, 0x63, 0xc6,
	0xe7, 0x02, 0x2a, 0xf7, 0x09, 0xb8, 0xa0, 0x45, 0xe5, 0xe1, 0x5a, 0x98, 0xd7, 0x60, 0x94, 0xd5,
	0x66, 0x11, 0x09, 0x19, 0x46, 0x67, 0xb0, 0xbe, 0x30, 0x21, 0xf9, 0x25, 0xb6, 0xad, 0xd9, 0x88,
	0x58, 0x0b, 0xbc, 0x16, 0x95, 0x22, 0xf3, 0x67, 0x15, 0xf4, 0x8f, 0x3e, 0xe3, 0x32, 0x84, 0x15,
	0xef, 0x3a, 0x98, 0x5b, 0x4e, 0xc9, 0xfb, 0x33, 0x95, 0xfb, 0x53, 0x38, 0xf0, 0x2f, 0x03, 0x4f,
	0xcb, 0xde, 0xdf, 0x91, 0x7c, 0xaa, 0x66, 0xc0, 0x56, 0xd1, 0xa8, 0x73, 0x42, 0x02, 0xc9, 0xb5,
	0x96, 0xdc, 0xa9, 0x6a, 0x06, 0xfd, 0xbf, 0xc8, 0x59, 0x66, 0xd6, 0x93, 0x3f, 0xcc, 0x5a, 0x5b,
	0x46, 0x91, 0x3d, 0x7a, 0xb4, 0xe0, 0xd1, 0xfa, 0x32, 0x8a, 0x64, 0xcd, 0xa3, 0x05, 0xb3, 0x35,
	0x96, 0x32, 0xe6, 0x1e, 0xdb, 0x87, 0x3a, 0x19, 0x8d, 0x18, 0xe6, 0xba, 0x5b, 0xe6, 0xaf, 0xfc,
	0x10, 0xed, 0x42, 0x2d, 0xf0, 0x27, 0x3e, 0xd7, 0x71, 0x19, 0x4a, 0x9c, 0xa1, 0x1e, 0x54, 0x19,
	0xa1, 0x5c, 0x1f, 0xb5, 0xd5, 0xce, 0xda, 0xf1, 0xa1, 0x24, 0xef, 0x32, 0xfd, 0xac, 0x4b, 0x42,
	0xf9, 0xbb, 0x90, 0xd3, 0xc4, 0xce, 0xa8, 0xc6, 0x29, 0x34, 0x67, 0x7f, 0xa1, 0x4d, 0x50, 0xc7,
	0x38, 0xc9, 0x37, 0x51, 0xfa, 0x99, 0x6e, 0xa7, 0xaf, 0x4e, 0x10, 0xe3, 0x4c, 0x46, 0xcd, 0x16,
	0xc1, 0xcb, 0xca, 0x73, 0xe5, 0x7d, 0x55, 0xd3, 0x36, 0x5d, 0xf3, 0x06, 0x76, 0x4a, 0x4a, 0xe5,
	0x36, 0x7c, 0x0d, 0x1b, 0x0b, 0x36, 0x4c, 0x87, 0x41, 0xbd, 0xcf, 0x87, 0xeb, 0xb2, 0x0f, 0x99,
	0xf9, 0x01, 0x8c, 0xb7, 0x42, 0xff, 0xb2, 0x09, 0x2b, 0x5f, 0x9c, 0xd2, 0x4a, 0xac, 0xc8, 0x2b,
	0xd1, 0xbc, 0x81, 0xc7, 0xa5, 0xc9, 0xfe, 0xc5, 0xc8, 0x1c, 0xff, 0xa8, 0xc0, 0x96, 0x7c, 0xfc,
	0xc9, 0x09, 0x1d, 0x0f, 0x53, 0xf4, 0x05, 0xea, 0x62, 0x4c, 0xd1, 0x9e, 0x94, 0x68, 0xe9, 0xd6,
	0x30, 0xf6, 0x57, 0xa0, 0xc4, 0x65, 0xcd, 0xff, 0xd0, 0x35, 0x34, 0xf2, 0xd7, 0x20, 0x99, 0xb3,
	0xbc, 0x5d, 0xc6, 0xc1, 0x2a, 0xd8, 0x2c, 0xf7, 0x25, 0x54, 0x53, 0x4d, 0xd1, 0xee, 0x03, 0xfc,
	0x64, 0xec, 0xdd, 0x0f, 0x2a, 0x92, 0x0e, 0xea, 0xd9, 0x3a, 0x3b, 0xf9, 0x1d, 0x00, 0x00, 0xff,
	0xff, 0x89, 0xe6, 0x5b, 0x20, 0xbb, 0x07, 0x00, 0x00,
}
